calculate_magic_research = {
	if = {
		limit = {
			is_magic_country = yes
		}

		# Total Innovation
		set_variable = {
			name = monthly_magic_innovation
			value = {
				value = modifier:country_magical_innovation_add
				multiply = {
					value = 1
					add = modifier:country_magical_innovation_mult
				}
			}
		}

		# Banking
		change_variable = {
			name = magic_innovation
			add = {
				value = modifier:country_magical_innovation_add
				multiply = {
					value = 1
					add = modifier:country_magical_innovation_mult
				}
			}
		}

		clamp_variable = {
			name = magic_innovation
			min = 0
			max = global_var:magic_innovation_bank_max
		}
	}
}

# Research Institutes can only exist in capital states
cleanup_research_institutes = {
	every_state = {
		limit = {
			is_capital = no
			has_building = building_magic_research_institute
		}
		remove_building = building_magic_research_institute
	}
}

reset_research_institute_pm = {
	if = {
		limit = {
			capital = {
				has_building = building_magic_research_institute
			}
		}
		if = {
			limit = {
				NOT = {
					has_variable = magic_researcher
				}
			}
			activate_production_method = {
				building_type = building_magic_research_institute
				production_method = pm_no_researcher
			}
		}
		else_if = {
			limit = {
				var:magic_researcher ?= {
					has_variable = magic_experience
					var:magic_experience >= character_master_threshhold
				}
			}
			activate_production_method = {
				building_type = building_magic_research_institute
				production_method = pm_archmage_researcher
			}
		}
		else_if = {
			limit = {
				var:magic_researcher ?= {
					has_variable = magic_experience
					var:magic_experience >= character_experienced_threshhold
				}
			}
			activate_production_method = {
				building_type = building_magic_research_institute
				production_method = pm_experienced_researcher
			}
		}
		else = {
			activate_production_method = {
				building_type = building_magic_research_institute
				production_method = pm_novice_researcher
			}
		}
	}
}

make_magic_researcher_busy = {
	var:magic_researcher ?= {
		set_character_busy_and_immortal = yes
		set_variable = {
			name = com_opinion
			value = flag:character_opinion_magic_researcher_busy
		}
	}
}

make_magic_researcher_not_busy = {
	var:magic_researcher ?= {
		set_character_busy_and_immortal = no
		set_variable = {
			name = com_opinion
			value = flag:character_opinion_magic_researcher
		}
	}
}

calculate_researcher_experience = {
	var:magic_researcher ?= {
		if = {
			limit = {
				has_variable = magic_experience
				var:magic_experience < character_experienced_maximum
			}
			change_variable = {
				name = magic_experience
				add = { 1 2 }
			}
			clamp_variable = {
				name = magic_experience
				min = character_experienced_minimum
				max = character_experienced_maximum
			}
		}
	}
}

cleanup_researchers = {
	if = {
		limit = {
			has_variable = magic_researcher
			NOT = {
				exists = var:magic_researcher
			}
		}
		if = {
			limit = {
				has_journal_entry = je_researching_magic
			}
			je:je_researching_magic = {
				clear_variable_list = com_journal_characters
			}
		}
		activate_production_method = {
			building_type = building_magic_research_institute
			production_method = pm_no_researcher
		}
		remove_variable = magic_researcher
	}
	else_if = {
		limit = {
			has_variable = magic_researcher
			exists = var:magic_researcher
		}
		if = {
			limit = {
				var:magic_researcher = {
					is_character_alive = no
				}
			}
			if = {
				limit = {
					has_journal_entry = je_researching_magic
				}
				je:je_researching_magic = {
					remove_list_variable = {
						name = com_journal_characters
						target = var:magic_researcher
					}
				}
			}
			activate_production_method = {
				building_type = building_magic_research_institute
				production_method = pm_no_researcher
			}
			remove_variable = magic_researcher
		}
	}
}

ai_unlock_magic_technology = {
	if = {
		limit = {
			var:magic_innovation >= 15000
			is_player = no
		}
		if = {
			limit = {
				NOT = {
					has_technology_researched = mana_extraction
				}
			}
			add_technology_researched = mana_extraction
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = magic_farming
				}
			}
			add_technology_researched = magic_farming
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = mage_infantry
				}
			}
			add_technology_researched = mage_infantry
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = battlefield_wards
				}
			}
			add_technology_researched = battlefield_wards
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = mana_lanterns
				}
			}
			add_technology_researched = mana_lanterns
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = formalized_magic
				}
			}
			add_technology_researched = formalized_magic
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = monster_compendium
				}
			}
			add_technology_researched = monster_compendium
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = healing_circles
				}
			}
			add_technology_researched = healing_circles
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = mage_artillery
				}
			}
			add_technology_researched = mage_artillery
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = ritual_magic
				}
			}
			add_technology_researched = ritual_magic
		}
		else_if = {
			limit = {
				this = c:GMK
				NOT = {
					has_technology_researched = magic_dwarf_murk_railways
				}
			}
			add_technology_researched = magic_dwarf_murk_railways
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = mana_cores
				}
			}
			add_technology_researched = mana_cores
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = magic_golems
				}
			}
			add_technology_researched = magic_golems
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = magic_science
				}
			}
			add_technology_researched = magic_science
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = mechanical_golems
				}
			}
			add_technology_researched = mechanical_golems
		}
		else_if = {
			limit = {
				NOT = {
					has_technology_researched = magic_electric_golems
				}
			}
			add_technology_researched = magic_electric_golems
		}
		set_variable = {
			name = magic_innovation
			value = 0
		}
	}
}