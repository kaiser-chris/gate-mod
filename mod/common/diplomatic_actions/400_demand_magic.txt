demand_magic_knowledge = {

	groups = {
		general
	}

	requires_approval = yes
	should_notify_third_parties = yes
	is_hostile = yes
	
	selectable = {
		is_revolutionary = no
		NOT = {
			is_country_type = decentralized
		}
	}
	
	potential = {
		scope:target_country = {
			is_magic_country = yes
			NOT = {
				is_country_type = decentralized
			}
		}
	}

	possible = {
		NOT = {
			is_subject_of = scope:target_country
			is_magic_country = yes
		}
		scope:target_country = {
			is_magic_country = yes
		}
	}

	accept_effect = {
		add_technology_researched = magic_understanding_production
		add_technology_researched = magic_understanding_society
		add_technology_researched = magic_understanding_military
		change_infamy = 5
	}

	decline_effect = {
		change_relations = {
			country = scope:target_country
			value = -20
		}
		change_infamy = 10
	}

	ai = {
		evaluation_chance = {
			value = 0.25
		}
		accept_score = {
			value = 0

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_BASE"
				value = -100
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RANK"
				if = {
					limit = {
						scope:actor = {
							country_rank > root.country_rank
						}
					}
					value = 10
				}
				else = {
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ARMY_STRENGTH"
				if = {
					limit = {
						"scope:actor.ai_army_comparison(root)" > 0
					}
					value = "scope:actor.ai_army_comparison(root)"
					max = 50
				}
				else = {
					value = -1000
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_ATTITUDE"
				if = {
					limit = {
						has_attitude = {
							who = scope:actor
							attitude = genial
						}
					}
					value = 50
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = conciliatory
							}
							has_attitude = {
								who = scope:actor
								attitude = cooperative
							}
							has_attitude = {
								who = scope:actor
								attitude = protective
							}
						}
					}
					value = 25
				}
				else_if = {
					limit = {
						OR = {
							has_attitude = {
								who = scope:actor
								attitude = antagonistic
							}
							has_attitude = {
								who = scope:actor
								attitude = domineering
							}
							has_attitude = {
								who = scope:actor
								attitude = belligerent
							}
						}
					}
					value = -1000
				}
				else = {
					value = -50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_RELATIONS"
				if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:cordial
						"relations(scope:actor)" < relations_threshold:amicable
					}
					value = 10
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:amicable
						"relations(scope:actor)" < relations_threshold:friendly
					}
					value = 25
				}
				else_if = {
					limit = {
						"relations(scope:actor)" >= relations_threshold:friendly
					}
					value = 50
				}
			}

			add = {
				desc = "DIPLOMATIC_ACCEPTANCE_INFAMY"
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:infamous
						"scope:actor.infamy" < infamy_threshold:notorious
					}
					value = -25
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:notorious
						"scope:actor.infamy" < infamy_threshold:pariah
					}
					value = -50
				}
				if = {
					limit = {
						"scope:actor.infamy" >= infamy_threshold:pariah
					}
					value = -1000
				}
			}

			if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = alliance
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIANCE"
					value = 50
				}
			}
			else_if = {
				limit = {
					has_diplomatic_pact = {
						who = scope:actor
						type = defensive_pact
					}
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_DEFENSIVE_PACT"
					value = 35
				}
			}

			if = {
				limit = {
					"num_alliances_and_defensive_pacts_with_rivals(scope:actor)" > 0
				}
				add = {
					desc = "DIPLOMATIC_ACCEPTANCE_ALLIED_TO_RIVALS"
					value = -1000
				}
			}
		}

		propose_score = {
			value = 10
		}

		will_propose = {
			always = yes
		}
	}
}

