types gate_expedition_panel_types {

    type gate_expedition_panel = fullscreen_block_window {
        name = "gate_expedition_panel"
        datacontext = "[GetMetaPlayer.GetPlayedOrObservedCountry]"

        visible = "[Or(GetVariableSystem.HasValue('com_open_window', 'gate_button_expedition'), GetVariableSystem.HasValue('com_alert_action', Localize('gg_panel_expedition_action')))]"

        blockoverride "animation_state_block" {
            state = {
                name = _show
                # Close open panel before showing this one
                on_finish = "[InformationPanelBar.ClosePanel]"
                on_finish = "[MapListPanelManager.CloseCurrentPanel]"
                # Fullscreen panels hide topbar
                on_finish = "[GetVariableSystem.Set('com_fullscreen', 'com_fullscreen')]"
                on_finish = "[GetScriptedGui('sgui_gate_map_reset_location').Execute(GuiScope.End)]"
                start_sound = {
                    soundeffect = "event:/SFX/UI/SideBar/markets"
                }
                start_sound = {
                    soundeffect = "snapshot:/Dynamic/mute_world_80"
                }
                start_sound = {
                    soundeffect = "snapshot:/Dynamic/mute_vfx_war_100"
                }
            }

            state = {
                name = _hide
                on_finish = "[GetVariableSystem.Clear('com_fullscreen')]"
                on_finish = "[GetScriptedGui('sgui_gate_map_reset_location').Execute(GuiScope.End)]"
                start_sound = {
                    soundeffect = "event:/SFX/UI/SideBar/markets_stop"
                }
            }
        }

        blockoverride "window_header_name"
        {
            text = gg_panel_expedition_title
            default_format = "#bold"
        }

        block "back_button_fullscreen" {
            back_button_large = {
                position = { 11 15 }
                parentanchor = top|left
                onclick = "[GetVariableSystem.Clear('com_open_window')]"
                onclick = "[GetVariableSystem.Clear('com_alert_action')]"
                input_action = "back"
            }

            close_button_large = {
                name = "tutorial_highlight_close_button"
                parentanchor = top|right
                onclick = "[GetVariableSystem.Clear('com_open_window')]"
                onclick = "[GetVariableSystem.Clear('com_alert_action')]"
                shortcut = "close_window"
                position = { -55 116 }
            }
        }

        blockoverride "close_button_position" {
            visible = no
        }

        blockoverride "fixed_top" {
            datacontext = "[Country.MakeScope.Var('gate_expedition')]"
            hbox = {
                layoutpolicy_horizontal = expanding
                margin = { 20 10 }
                margin_bottom = 15
                spacing = 30

                # Expedition Leader
                gate_character_small = {
                    visible = "[And(
                                    Scope.IsSet,
                                    Scope.Var('leader').IsSet
                               )]"
                    blockoverride "character_context" {
                        datacontext = "[Scope.Var('leader').GetCharacter]"
                    }
                }
                gate_character_small = {
                    visible = "[Or(
                                    Not(Scope.IsSet),
                                    Not(Scope.Var('leader').IsSet)
                               )]"
                    blockoverride "gate_character_tooltip" {
                        tooltip = gate_gate_expedition_leader_missing_tooltip
                    }
                    blockoverride "gate_opinion_visible" {
                        visible = no
                    }
                }
                hbox = {
                    maximumsize = { 300 -1 }
                    layoutpolicy_horizontal = expanding
                    layoutpolicy_vertical = expanding
                    margin = { 20 20 }
                    spacing = 20

                    background = {
                        using = simple_frame
                    }

                    vbox = {
                        layoutpolicy_horizontal = expanding
                        layoutpolicy_vertical = expanding

                        textbox = {
                            layoutpolicy_horizontal = expanding
                            text = gate_expedition_budget_header
                            default_format = "#title"
                            align = center
                        }

                        default_progressbar_horizontal = {
                            maximumsize = { -1 25 }
                            layoutpolicy_horizontal = expanding
                            visible = "[And3(
                                            Scope.IsSet,
                                            Scope.Var('expedition_budget').IsSet,
                                            Scope.Var('expedition_budget_total').IsSet
                                       )]"
                            tooltip = gate_expedition_budget_tooltip

                            blockoverride "values" {
                                value = "[Scope.Var('expedition_budget').GetValue]"
                                min = 0
                                max = "[Scope.Var('expedition_budget_total').GetValue]"
                            }

                            blockoverride "on_top_of_the_progressbar" {
                                textbox = {
                                    raw_text = "[Scope.Var('expedition_budget').GetValue] / [Scope.Var('expedition_budget_total').GetValue]"
                                    autoresize = yes
                                    align = center
                                    parentanchor = center
                                }
                            }
                        }
                    }
                }

                expand = {}
            }
            hbox = {
                minimumsize = { -1 2 }
                layoutpolicy_horizontal = expanding
                spacing = -2
                margin_right = -15
                hbox = {
                    minimumsize = { 30 -1 }
                    layoutpolicy_vertical = expanding

                    background = {
                        texture = "gfx/interface/dividers/divider_clean.dds"
                        texture_density = 2
                        spriteType = CorneredTiled
                        spriteborder = { 4 0 }

                        modify_texture = {
                            texture = "gfx/interface/masks/fade_horizontal_left_full.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = alphamultiply
                        }
                    }
                }
                hbox = {
                    layoutpolicy_vertical = expanding
                    layoutpolicy_horizontal = expanding

                    background = {
                        texture = "gfx/interface/dividers/divider_clean.dds"
                        texture_density = 2
                        spriteType = CorneredTiled
                        spriteborder = { 4 0 }
                    }
                }
                hbox = {
                    minimumsize = { 30 -1 }
                    layoutpolicy_vertical = expanding

                    background = {
                        texture = "gfx/interface/dividers/divider_clean.dds"
                        texture_density = 2
                        spriteType = CorneredTiled
                        spriteborder = { 4 0 }

                        modify_texture = {
                            texture = "gfx/interface/masks/fade_horizontal_left_full.dds"
                            spriteType = Corneredstretched
                            spriteborder = { 0 0 }
                            blend_mode = alphamultiply
                            mirror = horizontal
                        }
                    }
                }
            }
        }

        blockoverride "scrollarea_content" {
            widget = {
                size = { 100% 100% }

                background = {
                    spriteType = CorneredTiled
                    texture = gfx/map/ankaris/background.dds

                    modify_texture = {
                        texture = "gfx/interface/masks/fade_horizontal_center_map.dds"
                        spriteType = Corneredstretched
                        spriteborder = { 0 0 }
                        blend_mode = alphamultiply
                    }
                }

                map_container = {}

                map_sidebar = {}

                container = {
                    parentanchor = top|right
                    position = { -20 20 }
                    background = {
                        using = entry_bg_fancy_dark
                        alpha = 1
                    }
                    textbox = {
                        autoresize = yes
                        margin = { 20 12 }
                        align = center
                        text = gg_panel_map_drag_hint
                        using = fontsize_large
                    }
                }
            }
        }
    }
}