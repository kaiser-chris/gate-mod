# This widget is hidden but internally visible
# This allows triggering state events

# Fast update triggers
# - Custom Shortcuts
# - Script Open Panel
# - Alerts
widget = {
    name = "gate_hidden_trigger_fast"
    datacontext = "[GetMetaPlayer.GetPlayedOrObservedCountry]"
    allow_outside = yes
    size = { 0 0 }
    alpha = 0
    max_update_rate = 8
    visible = "[GetMetaPlayer.GetPlayedOrObservedCountry.IsValid]"

    # Custom Shortcuts
    widget = {
        visible = "[Country.IsValid]"
        widget = {
            # Base Panel (CTRL + T)
            button = {
                # Open
                enabled = "[Country.IsValid]"
                onclick = "[GetScriptedGui('gate_button_main').Execute(GuiScope.SetRoot(Country.MakeScope).End)]"
                onclick = "[GetVariableSystem.Set('com_open_window', 'gate_button_main')]"
                input_action = "input_ctrl_t"
            }
        }
    }

    # Script Open Panel
    widget = {
        widget = {
            # Expedition
            datacontext = "[GetScriptedGui('sgui_gate_expedition_open')]"
            visible = "[ScriptedGui.IsValid(GuiScope.SetRoot(Country.MakeScope).End)]"
            state = {
                name = _show
                on_finish = "[GetVariableSystem.Set('com_open_window', 'gate_button_expedition')]"
                on_finish = "[ScriptedGui.Execute(GuiScope.SetRoot(Country.MakeScope).End)]"
            }
        }
    }

    # Alerts
    widget = {
        visible = "[Country.IsValid]"
        widget = {
            # Base Panel
            visible = "[GetVariableSystem.HasValue('com_alert_action', Localize('gg_panel_base_action'))]"
            state = {
                name = _show
                on_finish = "[GetVariableSystem.Set('com_open_window', 'gate_button_main')]"
                on_finish = "[GetVariableSystem.Clear('com_alert_action')]"
            }
        }
        widget = {
            # Expedition
            visible = "[GetVariableSystem.HasValue('com_alert_action', Localize('gg_panel_expedition_action'))]"
            state = {
                name = _show
                on_finish = "[GetVariableSystem.Set('com_open_window', 'gate_button_expedition')]"
                on_finish = "[GetVariableSystem.Clear('com_alert_action')]"
            }
        }
        widget = {
            # Space
            visible = "[GetVariableSystem.HasValue('com_alert_action', Localize('gg_panel_space_action'))]"
            state = {
                name = _show
                on_finish = "[GetVariableSystem.Set('com_open_window', 'gate_button_space')]"
                on_finish = "[GetVariableSystem.Clear('com_alert_action')]"
            }
        }
    }
}

# Slow update triggers
# - Technology Notifications
widget = {
    name = "gate_hidden_trigger_slow"
    datacontext = "[GetMetaPlayer.GetPlayedOrObservedCountry]"
    allow_outside = yes
    size = { 0 0 }
    alpha = 0
    max_update_rate = 600
    visible = "[GetMetaPlayer.GetPlayedOrObservedCountry.IsValid]"

    # Technology Notifications
    widget = {
        visible = "[Country.IsValid]"
        gate_tech_tree_production = {
            blockoverride "tech_visibility" {
                visible = "[Not(Technology.HasResearchedTech(GetPlayer.Self))]"
            }
            blockoverride "tech_state" {
                state = {
                    trigger_when = "[And3(
                                        ScriptedGui.IsValid(GuiScope.SetRoot(Country.MakeScope).End),
                                        GetScriptedGui('sgui_gate_window_execute_research').IsValid(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End),
                                        GreaterThanOrEqualTo_CFixedPoint(Country.MakeScope.Var('magic_innovation').GetValue, Technology.GetCost(Country.Self))
                                    )]"
                    on_finish = "[GetScriptedGui('sgui_gate_can_research').Execute(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End)]"
                }
            }
        }
        gate_tech_tree_military = {
            blockoverride "tech_visibility" {
                visible = "[Not(Technology.HasResearchedTech(GetPlayer.Self))]"
            }
            blockoverride "tech_state" {
                state = {
                    trigger_when = "[And3(
                                        ScriptedGui.IsValid(GuiScope.SetRoot(Country.MakeScope).End),
                                        GetScriptedGui('sgui_gate_window_execute_research').IsValid(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End),
                                        GreaterThanOrEqualTo_CFixedPoint(Country.MakeScope.Var('magic_innovation').GetValue, Technology.GetCost(Country.Self))
                                    )]"
                    on_finish = "[GetScriptedGui('sgui_gate_can_research').Execute(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End)]"
                }
            }
        }
        gate_tech_tree_society = {
            blockoverride "tech_visibility" {
                visible = "[Not(Technology.HasResearchedTech(GetPlayer.Self))]"
            }
            blockoverride "tech_state" {
                state = {
                    trigger_when = "[And3(
                                        ScriptedGui.IsValid(GuiScope.SetRoot(Country.MakeScope).End),
                                        GetScriptedGui('sgui_gate_window_execute_research').IsValid(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End),
                                        GreaterThanOrEqualTo_CFixedPoint(Country.MakeScope.Var('magic_innovation').GetValue, Technology.GetCost(Country.Self))
                                    )]"
                    on_finish = "[GetScriptedGui('sgui_gate_can_research').Execute(GuiScope.SetRoot(Country.MakeScope).AddScope('technology', Technology.MakeScope).End)]"
                }
            }
        }
    }
}