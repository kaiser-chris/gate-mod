# = From Base Game
# Panel Constants
@panel_width_minus_10 = 530
@panel_width_minus_30 = 510
@panel_width = 540
@panel_width_half = 270
@panel_width_plus_10 = 550
@panel_width_plus_14 = 554
@panel_width_plus_14_half = 277
@panel_width_plus_20 = 560
@panel_width_plus_30 = 570
@panel_width_plus_70 = 610
# Tooltip Constants
@tooltip_max_width = 550
@tooltip_max_width_plus_margin = 580

types gate_types {

    type gate_technology_panel = default_block_window {
        name = "gate_technology_panel"

        visible = "[Or(GetVariableSystem.HasValue('com_open_window', 'gate_button_technology'), GetVariableSystem.HasValue('com_alert_action', 'Magic Technology Panel'))]"

        blockoverride "animation_state_block" {
            state = {
                name = _show
                # Close open panel before showing this one
                on_start = "[InformationPanelBar.ClosePanel]"
                on_start = "[MapListPanelManager.CloseCurrentPanel]"
                start_sound = {
                    soundeffect = "event:/SFX/UI/SideBar/technology"
                }
            }

            state = {
                name = _hide
                start_sound = {
                    soundeffect = "event:/SFX/UI/SideBar/technology_stop"
                }
            }
        }

        blockoverride "window_header_name"
        {
            text = gg_panel_technology_title
            default_format = "#bold"
        }

        blockoverride "header_back_button" {
            onclick = "[GetVariableSystem.Clear('com_open_window')]"
            onclick = "[GetVariableSystem.Clear('com_alert_action')]"
        }

        blockoverride "header_close_button" {
            onclick = "[GetVariableSystem.Clear('com_open_window')]"
            onclick = "[GetVariableSystem.Clear('com_alert_action')]"
        }

        blockoverride "fixed_top"
        {
            tab_buttons = {
                # Production
                blockoverride "first_button" {
                    text = "PRODUCTION_NO_CONCEPT"
                }
                blockoverride "first_button_tooltip" {
                    tooltip = "PRODUCTION_NO_CONCEPT"
                }
                blockoverride "first_button_click" {
                    onclick = "[GetScriptedGui('sgui_gate_technology_tab_production').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                }
                blockoverride "first_button_visibility" {
                    visible = "[GetScriptedGui('sgui_gate_technology_tab_production').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                }
                blockoverride "first_button_visibility_checked" {
                    visible = "[Not(GetScriptedGui('sgui_gate_technology_tab_production').IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
                }
                blockoverride "first_button_selected" {
                    text = "PRODUCTION_NO_CONCEPT"
                }
                blockoverride "first_button_background" {
                    background = {
                        margin = { 0 -2 }
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Orange
                        alpha = 0.5
                    }
                }
                blockoverride "first_button_background_selected" {
                    background = {
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Orange
                        alpha = 0.5
                    }
                }

                # Military
                blockoverride "second_button" {
                    text = "MILITARY"
                }
                blockoverride "second_button_tooltip" {
                    tooltip = "MILITARY"
                }
                blockoverride "second_button_click" {
                    onclick = "[GetScriptedGui('sgui_gate_technology_tab_military').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                }
                blockoverride "second_button_visibility" {
                    visible = "[GetScriptedGui('sgui_gate_technology_tab_military').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                }
                blockoverride "second_button_visibility_checked" {
                    visible = "[Not(GetScriptedGui('sgui_gate_technology_tab_military').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
                }
                blockoverride "second_button_selected" {
                    text = "MILITARY"
                }
                blockoverride "second_button_background" {
                    background = {
                        margin = { 0 -2 }
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Red
                        alpha = 0.15
                    }
                }
                blockoverride "second_button_background_selected" {
                    background = {
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Red
                        alpha = 0.15
                    }
                }

                # Society
                blockoverride "third_button" {
                    text = "SOCIETY"
                }
                blockoverride "third_button_tooltip" {
                    tooltip = "SOCIETY"
                }
                blockoverride "third_button_click" {
                    onclick = "[GetScriptedGui('sgui_gate_technology_tab_society').Execute( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                }
                blockoverride "third_button_visibility" {
                    visible = "[GetScriptedGui('sgui_gate_technology_tab_society').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                }
                blockoverride "third_button_visibility_checked" {
                    visible = "[Not(GetScriptedGui('sgui_gate_technology_tab_society').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End ))]"
                }
                blockoverride "third_button_selected" {
                    text = "SOCIETY"
                }
                blockoverride "third_button_background" {
                    background = {
                        margin = { 0 -2 }
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Red
                        alpha = 0.15
                    }
                }
                blockoverride "third_button_background_selected" {
                    background = {
                        using = fade_bottom_entry_fancy_header_colored
                        using = Color_Red
                        alpha = 0.15
                    }
                }
            }

            flowcontainer = {
                direction = vertical
                spacing = 5
                margin_top = 10
                margin_bottom = 10

                default_header_2texts = {
                    blockoverride "text1" {
                        text = gg_header_active_research
                    }
                    blockoverride "text2" {
                        raw_text = "#variable @magic_innovation![GetPlayer.MakeScope.Var('weekly_magic_innovation').GetValue|0+=]#!"

                        # Explanation Tooltip
                        tooltipwidget = {
                            magic_innovation_tooltip = {}
                        }
                    }
                }

                gate_technologies_production = {
                    blockoverride "container_spacing" {}
                    blockoverride "enabled" {
                        enabled = yes
                    }
                    blockoverride "onclick" {
                        onclick = "[GetScriptedGui('sgui_gate_window_cancel_research').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    }
                    blockoverride "visibility" {
                        visible = "[And(GetPlayer.MakeScope.Var('magic_research').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))]"
                    }
                }
                gate_technologies_military = {
                    blockoverride "container_spacing" {}
                    blockoverride "enabled" {
                        enabled = yes
                    }
                    blockoverride "onclick" {
                        onclick = "[GetScriptedGui('sgui_gate_window_cancel_research').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    }
                    blockoverride "visibility" {
                        visible = "[And(GetPlayer.MakeScope.Var('magic_research').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))]"
                    }
                }
                gate_technologies_society = {
                    blockoverride "container_spacing" {}
                    blockoverride "enabled" {
                        enabled = yes
                    }
                    blockoverride "onclick" {
                        onclick = "[GetScriptedGui('sgui_gate_window_cancel_research').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    }
                    blockoverride "visibility" {
                        visible = "[And(GetPlayer.MakeScope.Var('magic_research').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))]"
                    }
                }

                textbox = {
                    visible = "[Not(GetPlayer.MakeScope.Var('magic_research').IsSet)]"
                    text = gg_technology_no_research
                    autoresize = yes
                    align = center|nobaseline
                    using = fontsize_large
                    parentanchor = top|hcenter
                    margin_bottom = 0
                    margin_top = 25
                    alpha = 0.5
                    minimumsize = { @panel_width -1 }
                }

                textbox = {
                    visible = "[Not(GetPlayer.MakeScope.Var('magic_research').IsSet)]"
                    text = gg_technology_no_research_blink
                    autoresize = yes
                    align = center|nobaseline
                    using = fontsize_xxl
                    using = look_at_me_text_animation
                    parentanchor = top|hcenter
                    margin_bottom = 35
                    margin_top = 0
                    minimumsize = { @panel_width -1 }
                }

                divider_light = {
                    size = { @panel_width 2 }
                    alpha = 0.5
                }
            }
        }

        blockoverride "scrollarea_content" {
            # Production
            flowcontainer = {
                visible = "[GetScriptedGui('sgui_gate_technology_tab_production').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                using = default_list_position
                direction = vertical

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_production_open"
                    }
                }

                gate_technologies_production = {}

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_done"
                    }
                }

                gate_technologies_production = {
                    blockoverride "visibility" {
                        visible = "[And(Technology.HasResearchedTech(GetPlayer.Self), Or(Not(GetPlayer.MakeScope.Var('magic_research').IsSet), Not(ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))))]"
                    }
                    blockoverride "enabled" {
                        enabled = no
                    }
                }
            }

            # Military
            flowcontainer = {
                visible = "[GetScriptedGui('sgui_gate_technology_tab_military').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                using = default_list_position
                direction = vertical

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_military_open"
                    }
                }

                gate_technologies_military = {}

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_done"
                    }
                }

                gate_technologies_military = {
                    blockoverride "visibility" {
                        visible = "[And(Technology.HasResearchedTech(GetPlayer.Self), Or(Not(GetPlayer.MakeScope.Var('magic_research').IsSet), Not(ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))))]"
                    }
                    blockoverride "enabled" {
                        enabled = no
                    }
                }
            }

            # Society
            flowcontainer = {
                visible = "[GetScriptedGui('sgui_gate_technology_tab_society').IsShown( GuiScope.SetRoot( GetPlayer.MakeScope ).End )]"
                using = default_list_position
                direction = vertical

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_society_open"
                    }
                }

                gate_technologies_society = {}

                default_header = {
                    blockoverride "text" {
                        text = "gg_header_research_list_done"
                    }
                }

                gate_technologies_society = {
                    blockoverride "visibility" {
                        visible = "[And(Technology.HasResearchedTech(GetPlayer.Self), Or(Not(GetPlayer.MakeScope.Var('magic_research').IsSet), Not(ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))))]"
                    }
                    blockoverride "enabled" {
                        enabled = no
                    }
                }
            }

        }
    }

    type gate_technologies_production = flowcontainer {
        direction = vertical
        parentanchor = top|left
        margin_left = 8
        block "container_spacing" {
            spacing = 5
            margin_top = 10
            margin_bottom = 10
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_understanding_production')]"
                datacontext = "[GetScriptedGui('magic_understanding_production')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('mana_extraction')]"
                datacontext = "[GetScriptedGui('mana_extraction')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_farming')]"
                datacontext = "[GetScriptedGui('magic_farming')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_dwarf_murk')]"
                datacontext = "[GetScriptedGui('magic_dwarf_murk')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_dwarf_murk_railways')]"
                datacontext = "[GetScriptedGui('magic_dwarf_murk_railways')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_golems')]"
                datacontext = "[GetScriptedGui('magic_golems')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_and_steam')]"
                datacontext = "[GetScriptedGui('magic_and_steam')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_steam_golems')]"
                datacontext = "[GetScriptedGui('magic_steam_golems')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_and_electricity')]"
                datacontext = "[GetScriptedGui('magic_and_electricity')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_electric_golems')]"
                datacontext = "[GetScriptedGui('magic_electric_golems')]"
            }
        }
    }

    type gate_technologies_military = flowcontainer {
        direction = vertical
        margin_left = 8
        block "container_spacing" {
            spacing = 5
            margin_top = 10
            margin_bottom = 10
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_understanding_military')]"
                datacontext = "[GetScriptedGui('magic_understanding_military')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('mage_infantry')]"
                datacontext = "[GetScriptedGui('mage_infantry')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('mage_artillery')]"
                datacontext = "[GetScriptedGui('mage_artillery')]"
            }
        }
    }

    type gate_technologies_society = flowcontainer {
        direction = vertical
        margin_left = 8
        block "container_spacing" {
            spacing = 5
            margin_top = 10
            margin_bottom = 10
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_understanding_society')]"
                datacontext = "[GetScriptedGui('magic_understanding_society')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('dwarven_gate_immigration')]"
                datacontext = "[GetScriptedGui('dwarven_gate_immigration')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('formalized_magic')]"
                datacontext = "[GetScriptedGui('formalized_magic')]"
            }
        }

        gate_technology = {
            blockoverride "context" {
                datacontext = "[GetTechnology('magic_science')]"
                datacontext = "[GetScriptedGui('magic_science')]"
            }
        }
    }

    ### Gate Technology
    type gate_technology = flowcontainer {
        block "context" {
            #datacontext = "[GetTechnology('some_technology')]"
        }

        block "visibility" {
            visible = "[And3(ScriptedGui.IsShown(GuiScope.SetRoot(GetPlayer.MakeScope).End), Not(Technology.HasResearchedTech(GetPlayer.Self)), Or(Not(GetPlayer.MakeScope.Var('magic_research').IsSet), Not(ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))))]"
        }

        flowcontainer = {
            visible = "[Technology.HasResearchedTech(GetPlayer.Self)]"

            background = {
                using = frame_small
            }

            tooltipwidget = {
                FancyTooltip_Technology = {}
            }

            magic_technology_inner = {
                blockoverride "flowcontainer_properties" {
                    margin_left = 10
                    margin_right = 10
                    margin_top = 10
                    margin_bottom = 15
                }
            }
        }

        button = {
            visible = "[Not(Technology.HasResearchedTech(GetPlayer.Self))]"

            tooltipwidget = {
                magic_technology_tooltip = {}
            }

            # Technology done
            # Only triggers when open
            # Is triggered through hidden UI
            # See: gate_research_trigger
            state = {
                trigger_when = "[And3(GetPlayer.MakeScope.Var('magic_research').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope), GreaterThanOrEqualTo_CFixedPoint(GetPlayer.MakeScope.Var('magic_research_progress').GetValue, Technology.GetCost(GetPlayer.Self)))]"
                on_finish = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('technology', Technology.MakeScope).End)]"
            }

            using = technology_confirm_button_sound

            block "button_style" {
                using = default_button
            }

            block "onclick" {
                onclick = "[GetScriptedGui('sgui_gate_window_execute_research').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('technology', Technology.MakeScope).End)]"
            }

            block "enabled" {
                enabled = "[And(ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End), GetScriptedGui('sgui_gate_window_execute_research').IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('technology', Technology.MakeScope).End))]"
            }

            block "background" {}

            magic_technology_inner = {}
        }
    }

    type magic_technology_tooltip = FancyTooltipWidgetType {
        blockoverride "text" {
            # Does not modify size that is why we repeat it below
            widget = {
                layer = bottom
                parentanchor = top|left
                custom_tooltip_textbox = {
                    text = DATA_TECHNOLOGY_NAME_TOOLTIP
                }
            }
        }
        blockoverride "tooltip_content_before" {
        }
        blockoverride "tooltip_content_after" {
            # This widget will be layered over the original tooltip to overwrite the first line.
            # This is needed because there is no way rebuild/modify the full technology tooltip.
            # So we render the original tooltip and overwrite the first line to replace some text.
            widget = {
                flowcontainer = {
                    margin = { 15 10 }
                    position = { -15 -10 }
                    min_width = @tooltip_max_width_plus_margin
                    custom_tooltip_textbox = {
                        text = gg_magic_technology_tooltip_cost
                        multiline = no
                    }
                    custom_tooltip_textbox = {
                        raw_text = "#v #tooltippable [Technology.GetCost(GetPlayer.Self)|K]#!#!"
                        multiline = no
                        tooltip = "[Technology.GetCostDesc(GetPlayer.Self)]"
                    }
                    custom_tooltip_textbox = {
                        text = gg_magic_technology_tooltip_duration
                        multiline = no
                    }

                    background = {
                        spriteType = CorneredTiled
                        spriteborder = { 48 48 }
                        texture = "gfx/interface/tooltip/tooltip_bg.dds"
                        texture_density = 2
                        tintcolor = "[TooltipInfo.GetTintColor]"
                    }
                }
            }
            # Invisible and just used for tooltip sizing
            container = {
                alpha = 0
                layer = bottom
                parentanchor = top|left
                custom_tooltip_textbox = {
                    text = DATA_TECHNOLOGY_NAME_TOOLTIP
                }
                flowcontainer = {
                    min_width = @tooltip_max_width

                    custom_tooltip_textbox = {
                        text = gg_magic_technology_tooltip_cost
                        multiline = no
                    }
                    custom_tooltip_textbox = {
                        raw_text = "#v #tooltippable [Technology.GetCost(GetPlayer.Self)|K]#!#!"
                        multiline = no
                        tooltip = "[Technology.GetCostDesc(GetPlayer.Self)]"
                    }
                    custom_tooltip_textbox = {
                        text = gg_magic_technology_tooltip_duration
                        multiline = no
                    }
                }
            }
        }

        blockoverride "icon_texture" {
            texture = "[Technology.GetTexture]"

            widget = {
                size = { 34 34 }
                position = { -6 30 }

                icon = {
                    size = { 60% 60% }
                    texture = "gfx/interface/backgrounds/round_button_bg.dds"
                }

                textbox = {
                    text = "TECHNOLOGY_TYPE_DESCRIPTION"
                    align = center|nobaseline
                    position = { -7 -7 }
                    using = fontsize_small
                    size = { 20% 20% }
                    parentanchor = center
                }
            }

        }

        blockoverride "name" {
            text = "[Technology.GetNameNoFormatting]"
        }

        blockoverride "type" {
            text = "TOOLTIP_TYPE_TECHNOLOGY"
        }
    }

    type magic_innovation_tooltip = FancyTooltipWidgetType {
        blockoverride "name" {
            raw_text = "[concept_magic_innovation]"
        }

        blockoverride "icon_texture" {
            texture = "gfx/interface/icons/generic_icons/innovation.dds"
        }

        blockoverride "type" {
            visible = no
        }

        blockoverride "text" {
            text = gg_magic_innovation_tooltip
        }

        blockoverride "tooltip_content_after" {
            custom_tooltip_textbox = {
                text = "[Concatenate('    ', Localize('gg_magic_innovation_base'))]"
            }
            custom_tooltip_textbox = {
                visible = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('weekly_magic_innovation_magic_gate').GetValue, '(CFixedPoint)0')]"
                text = "[Concatenate('    ', Localize('gg_magic_innovation_magic_gate_tooltip'))]"
            }
            custom_tooltip_textbox = {
                visible = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('weekly_magic_innovation_mage_tower').GetValue, '(CFixedPoint)0')]"
                text = "[Concatenate('    ', Localize('gg_magic_innovation_mage_tower_tooltip'))]"
            }
            custom_tooltip_textbox = {
                visible = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('weekly_magic_innovation_magic_academy').GetValue, '(CFixedPoint)0')]"
                text = "[Concatenate('    ', Localize('gg_magic_innovation_magic_academy_tooltip'))]"
            }
            custom_tooltip_textbox = {
                visible = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('weekly_magic_innovation_university').GetValue, '(CFixedPoint)0')]"
                text = "[Concatenate('    ', Localize('gg_magic_innovation_university_tooltip'))]"
            }
            custom_tooltip_textbox = {
                margin_top = 10
                text = gg_magic_innovation_warning_tooltip
            }
        }
    }

    type magic_technology_inner = flowcontainer {
        resizeparent = yes
        direction = vertical

        block "minimumsize" {
            minimumsize = { @panel_width -1 }
        }
        block "flowcontainer_properties" {
            margin_left = 10
            margin_right = 10
            margin_bottom = 8
        }

        # Icons & Text
        flowcontainer = {
            margin_left = 5

            # Icons
            flowcontainer = {
                margin_left = 10
                direction = vertical
                margin_top = 8

                # Technology Frame & Icon
                icon = {
                    texture = "gfx/interface/backgrounds/round_frame_dec.dds"
                    parentanchor = top|right
                    size = { 60 60 }
                    alwaystransparent = yes

                    # Technology Icon
                    flowcontainer = {
                        margin = { 10 10 }
                        icon = {
                            texture = "[Technology.GetTexture]"
                            block "iconsize" {
                                size = { 40 40 }
                            }
                        }
                    }
                }
            }

            # Text
            flowcontainer = {
                direction = vertical
                parentanchor = vcenter

                # Title
                textbox = {
                    margin = { 15 10 }
                    background = {
                        using = fade_right_entry_fancy_header_colored
                        using = dark_area
                    }

                    text = "[Technology.GetNameNoFormatting]"
                    autoresize = yes
                    align = left|nobaseline
                    multiline = yes
                    default_format = "#header"

                    block "fontsize" {
                        using = fontsize_large
                    }

                    block "textsize" {
                        maximumsize = { 435 -1 }
                        minimumsize = { 435 -1 }
                    }
                }

                # Description
                textbox = {
                    margin = { 15 0 }
                    margin_bottom = 5
                    text = "[Technology.GetDesc]"
                    visible = "[Not(StringIsEmpty(Technology.GetDesc))]"
                    autoresize = yes
                    align = left|nobaseline
                    multiline = yes
                    block "textsize" {
                        maximumsize = { 435 -1 }
                        minimumsize = { 435 -1 }
                    }
                }
            }
        }

        # Unlocks
        flowcontainer = {
            margin_top = 0
            margin_bottom = 5
            margin_left = 5
            margin_right = 5
            parentanchor = right
            spacing = 5
            datamodel = "[Technology.GetUnlocks(GetPlayer.Self)]"

            item = {
                icon = {
                    size = { 25 25 }
                    texture = "[TechnologyUnlock.GetTexture]"
                    tooltip = "[TechnologyUnlock.GetTooltip]"
                    using = tooltip_se
                }
            }
        }

        # progress bar
        flowcontainer = {
            visible = "[And(GetPlayer.MakeScope.Var('magic_research').IsSet, ObjectsEqual(GetPlayer.MakeScope.Var('magic_research').GetTechnology.MakeScope, Technology.MakeScope))]"
            margin = { 10 10 }
            default_progressbar_horizontal = {
                block "progressbar_size" {
                    size = { 500 20 }
                }
                blockoverride "values" {
                    value = "[GetPlayer.MakeScope.Var('magic_research_progress').GetValue]"
                    min = 0
                    max = "[Technology.GetCost(GetPlayer.Self)]"
                }
            }
        }
    }
}